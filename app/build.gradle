apply plugin: 'com.android.application'

ext {
    versionMajor = 0
    versionMinor = 0
    versionPatch = 1
    versionClassifier = null
    isSnapShot = false
    minSdkVersion = 21
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.gigi.mobile.giditestjava"
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion 28
        versionCode generateVersionCode()
        versionName generateVersionName()
        buildConfigField("String", "APPID", "\"95e7425196978b17ce96b33e43bdaac8\"")
        buildConfigField("String", "BASE_URL", "\"https://api.openweathermap.org/data/2.5/\"")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha02'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0-alpha03'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    //Architecture components
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.room:room-runtime:2.1.0-alpha04'
    implementation 'androidx.room:room-rxjava2:2.1.0-alpha04'
    testImplementation 'androidx.arch.core:core-testing:2.0.0'
    testImplementation 'androidx.room:room-testing:2.1.0-alpha04'
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.0.0'
    annotationProcessor 'androidx.room:room-compiler:2.1.0-alpha04'

    //Retrofit for network calls
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'

    //Views and animations
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'

    //Google JSON Parser
    implementation 'com.google.code.gson:gson:2.8.5'

    //RxJava2
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.1'

    //OkHttp
    implementation 'com.squareup.okhttp3:okhttp:3.12.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'

    implementation 'com.google.android.gms:play-services-location:16.0.0'

    //Dagger2 for Dependency Injection
    implementation 'com.google.dagger:dagger:2.17'
    implementation 'com.google.dagger:dagger-android:2.17'
    implementation 'com.google.dagger:dagger-android-support:2.17'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.17'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.17'

    //Mockito
    testImplementation 'org.mockito:mockito-core:2.7.22'
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.8.1'
    androidTestImplementation 'org.mockito:mockito-core:2.7.22'
    androidTestImplementation 'org.mockito:mockito-android:2.22.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.2-alpha01'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.2-alpha01'
}

android {
    // ...
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

private Integer generateVersionCode() {
    return ext.minSdkVersion * 10000000 + ext.versionMajor * 10000 +
            ext.versionMinor * 100 + ext.versionPatch
}

private String generateVersionName() {
    String versionName = "${ext.versionMajor}.${ext.versionMinor}.${ext.versionPatch}"
    if (ext.versionClassifier == null) {
        if (ext.isSnapShot) {
            ext.versionClassifier = "SNAPSHOT"
        }
    }

    if (ext.versionClassifier != null) {
        versionName += "-${ext.versionClassifier}"
    }

    return versionName
}
